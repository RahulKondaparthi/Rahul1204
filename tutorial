1)How can I get the list of files in a directory using C/C++?
  #include<stdio.h>
  int main()
  {
   char command[20] = "ls -l";
   system(command);
   return 0;
   }
   
2) How to debug a core in C/C++?
 A process dumps core when it is terminated by operating system due to fault in program.
 The most common fault is that program accessing invalid pointer(NNULL) or value out area of memory..It is useful for debugging.
 The core is dumped to the /proc/sys/kernel directory by default. To debug a core, the program must be compiled with the -g option. 
 
3)Segmentation fault ?
  A segmentation fault occurs when a program aacees to memory(beyond the limits) that is not allowed by operating system.
         Accessing an array out of bounds.(indexed array where the index is outside of the array bounds)
         Dereferencing NULL pointers
         Dereferencing freed memory
         Dereferencing uninitialized pointers
         Incorrect use of the "&" (address of) and "*" (dereferencing) operators
         Improper formatting specifiers in printf and scanf statements
         Stack overflow
         Writing to read-only memory

4) compilation process in C?
  Pre-processing
  Compilation
  Assembly
  Linking                            P                     C                       A            L
               File---->Filenmae.c----->Filename.i---------->Filename.s-------------->Filename.o

  Pre-processing:
            Removal of Comments
            Expansion of Macros
            Expansion of the included files.
            Conditional compilation            
   The preprocessed output is stored in the filename.i

 Compilation:
 The next step is to compile filename.i and produce an; intermediate compiled output file filename.s. 
 This file is in assembly level instructions. 

  Assembler:
  In this phase the filename.s is taken as input and turned into filename.o by assembler.
  This file contain machine level instructions.

 Linking
 This is the final phase in which all the linking of function calls with their definitions are done. 
 Linker knows where all these functions are implemented.
 Linker does some extra work also, it adds some extra code to our program which is required when the program starts and ends.
 
 
