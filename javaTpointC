1)  Elements of original array: 
    1 2 3 4 5 
    Elements of new array: 
    1 2 3 4 5 
    #include <stdio.h>  
   
int main()  
{  
    //Initialize array   
    int arr1[] = {1, 2, 3, 4, 5};  
      
    //Calculate length of array arr1  
    int length = sizeof(arr1)/sizeof(arr1[0]);  
      
    //Create another array arr2 with the size of arr1.  
  
    int arr2[length];  
      
    //Copying all elements of one array into another  
    for (int i = 0; i < length; i++) {   
        arr2[i] = arr1[i];   
    }    
      
    //Displaying elements of array arr1   
    printf("Elements of original array: \n");  
    for (int i = 0; i < length; i++) {   
        printf("%d ", arr1[i]);  
    }  
      
    printf("\n");  
      
    //Displaying elements of array arr2   
    printf("Elements of new array: \n");  
    for (int i = 0; i < length; i++) {   
        printf("%d ", arr2[i]);  
    }  
    return 0;  
}  

2)2) Program to find the frequency of each element of an array
     arr = [1, 2, 8, 3, 2, 2, 2, 5, 1]
     Element | Frequency
       1|2
       2|4
       8|1
       3|1
       5|1
       
       #include <stdio.h>  
   
int main()  
{  
    //Initialize array   
    int arr[] = {1, 2, 8, 3, 2, 2, 2, 5, 1};   
      
    //Calculate length of array arr  
    int length = sizeof(arr)/sizeof(arr[0]);  
      
    //Array fr will store frequencies of element  
    int fr[length];  
    int visited = -1;  
      
    for(int i = 0; i < length; i++){  
        int count = 1;  
        for(int j = i+1; j < length; j++){  
            if(arr[i] == arr[j]){  
                count++;  
                //To avoid counting same element again  
                fr[j] = visited;  
            }  
        }  
        if(fr[i] != visited)  
            fr[i] = count;  
    }  
      
  3) Array elemnts ascending and desencing order
  
   //Sort the array in ascending order  
    for (int i = 0; i < length; i++) {   
        for (int j = i+1; j < length; j++) {   
           if(arr[i] > arr[j]) {     /// for descending order <
               temp = arr[i];  
               arr[i] = arr[j];  
               arr[j] = temp;  
           }   
        }   
    }  
    
    
