#include <stdio.h>

int main()
{
    int n,bit=31;
    scanf("%d",&n);
    for(bit=31;bit>=0;bit--)
    {
        if((1<<bit)&n)
        printf("1");
        else
        printf("0");
    }
    return 0;
}

binary to decimal conversion:\
============================
#include <stdio.h>
 
/* Driver function */ 
int BinaryToDecimal(long int binary) 
{
	long int decimal = 0, i = 1, remainder;
	
	/* Iterate unitl number becomes zero */
	while (binary != 0)
    {
        remainder = binary % 10;
        decimal = decimal + remainder * i;
        i = i * 2;
        binary = binary / 10;
    }
    
    return decimal;
}
	
/* Main Method */
int main()
{
    long int binary = 10011011;
    
    printf("Equivalent Decimal value:     %ld \n\n", BinaryToDecimal(binary));
     
    printf("Equivalent hexadecimal value: %lX \n\n", BinaryToDecimal(binary));
    
	return 0;
}
====================================================================================================
set bit count in a number?

#include <stdio.h>

int main()
{
    int n,bit=31;
    scanf("%d",&n);
    for(bit=31;bit>=0;bit--)
    {
        if((1<<bit)&n)
        printf("1");
        else
        printf("0");
    }
    return 0;
}
========================================================================================================
how to turn off particular bit ?

#include<stdio.h>
 
// Returns a number that has all bits same 
// except the bit which is made 0
int TurnOffParticularBit(int number, int bit)
{
    // bit must be greater than 0
    if (bit <= 0) return number;
 
    // Do & of number with a number with all set bits except
    // the bit
    return (number & ~(1 << (bit - 1)));
}
 
int main()
{
     printf("%d",TurnOffParticularBit(15, 4)  );

     return 0;
}
============================================================================================================
